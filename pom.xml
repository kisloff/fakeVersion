<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ru.mos</groupId>
    <artifactId>fake</artifactId>
    <version>${newVersion}</version>
    <packaging>war</packaging>

    <properties>
        <newVersion>1.0</newVersion>
        <build.dir>${project.basedir}/../builds/${newVersion}</build.dir>
        <java.version>1.8</java.version>
    </properties>

    <profiles>
        <profile>
            <id>jenkins</id>
            <properties>
                <!--Проставить при создании новой release-ветки.
                Необходимо рассмотреть возможность автоматизации данного процесса в части забора переменной
                из имени ветки. Вероятно, решится добавлением maven-release-plugin-->
                <newVersion>${releaseVer}.${env.BUILD_NUMBER}</newVersion>
            </properties>
        </profile>
    </profiles>

    <build>
    <finalName>ssm</finalName>
    <plugins>
    <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>3.2.2</version>
        <configuration>
            <failOnMissingWebXml>false</failOnMissingWebXml>
            <outputDirectory>${project.basedir}/builds/${newVersion}</outputDirectory>
            <warSourceDirectory>target/client</warSourceDirectory>
            <archive>
                <manifest>
                    <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                </manifest>
            </archive>
        </configuration>
    </plugin>
        <!-- modify content of a maven property and save it into a new property
         via Groovy Maven Plugin ... -->
        <plugin>
            <groupId>org.codehaus.groovy.maven</groupId>
            <artifactId>gmaven-plugin</artifactId>
            <executions>
                <execution>
                    <phase>generate-sources</phase>
                    <goals>
                        <goal>execute</goal>
                    </goals>
                    <configuration>
                        <source>
                            System.setProperty("releaseVer", "${env.GIT_BRANCH}".replace('release/', ''))
                        </source>
                    </configuration>
                </execution>
            </executions>
        </plugin>
    </plugins>
    </build>

</project>